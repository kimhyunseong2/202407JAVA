7월19일 코드참조
정보
CRUD
Create:insert
Read
Update
Delete

create table 테이블 이름(... ) : 테이블 생성
insert into 테이블 이름 values(... ) : 테이블 안에 요소 삽입
drop table 테이블 이름 : 테이블 삭제
-----------------------------------------------------------
7월22일
create database 데이터베이스이름; -데이터베이스 생성 명령어
-----------------------------------------------------------
7월24일
update 테이블명 set 칼럼명 - 테이블에 칼럼값을 변경할때 사용하는 명령어
-----------------------------------------------------------
8월6일
oracle
관계형 데이터 모델
-개체(entiy) = 테이블
-속성(attribute) = 컬럼
-관계(relationship)

SQL(Structured Query Language): RDBMS에서 데이터를 다루고 관리하는데 사용하는 데이터베이스 질의 언어
종류(oracle책 p26참고)
-DQL
-DML
-DDL
-TCL
-DCL

관계형 데이터베이스의 구성요소(p29~37 참고)
테이블
가로줄을 행(row) 세로줄을 열(column)

기본키(PK: Primary Key) = unique + not null
외래키(FK: Foreign Key) = 다른 테이블의 기본키 

데이터베이스에 저장하는 데이터는 다양한 형태를 가지고 있다
자료형(p39에 표 참고)

테이블 구성 살펴보는 명령어
DESC 테이블이름;

셀렉션(selection): 행 단위로 원하는 데이터를 조회하는 방식
프로젝션(projection): 열 단위로 원하는 데이터를 조회하는 방식

조인(join): 두 개 이상의 테이블을 양옆에 연결하여 마치 하나의 테이블인 것처럼 데이터를 조회하는 방식

DISTINCT: 중복 데이터를 삭제할때 사용

ORDER BY: 원하는 순서로 출력 데이터를 정렬할때 사용
오름차순 정렬 ASC | 내림차순 정렬 DESC

WHERE절: 필요한 데이터만 출력할때 사용

여러 개 조건식을 사용하는 AND, OR 연산자(p97, p99 표 참고)
AND는 둘다 ture이면 ture 하나라도 false면 false
OR는 하나라도 ture면 ture 

등가 비교 연산자(p104 표 참고)

논리 부정 연산자(NOT)

IN 연산자(p106,107 참고)

BETWEEN A AND B 연산자(p109 참고)

LIKE 연산자와 와일드 카드(p110 참고)

IS NULL 연산자(p114 참고)

집합 연산자(UNION)(p119 참고)
-------------------------------------------------------------------------------------------------------
8월7일
set PAGESIZE 0: 세팅
coalesce(comm,o): null 처리함수 

무작위로 레코드를 반환하는거
oracle에서 rownum 
mysql에서 limit

숫자를 #으로 바꿈: select translate(data, '0123456789','##########') 
    		from V

숫자를 공백으로 바꿈: select replace(translate(data, '0123456789','##########'), '#', '') 
    		from V

숫자만 나옴: select replace(data, replace(translate(data, '0123456789','##########'), '#', ''),'') 
    		from V

뷰에서 정렬: select *
    	from V
    	order by replace(data, replace(translate(data, '0123456789','##########'), '#', ''),'') 

null을 먼저나오거나 나중에나오는거
nulls first
nulls last

oracle책 p125 문제
1. select *
   from emp 
   where ename like '%S';

2. select empno,ename,job,sal,deptno
    from emp
    where deptno = 30 and job = 'SALESMAN';

3. 1) select empno, ename, job, sal, deptno
    from emp
    where deptno in(20,30)
    and sal > 2000;
  
   2) select empno, ename, job, sal, deptno
         from emp
         where deptno = 20
         and sal > 2000
       union
       select empno, ename, job, sal, deptno
         from emp
         where deptno = 30
         and sal > 2000;

4. select *
    from emp
    where sal < 2000
         or sal > 3000;

5. select ename, empno, sal, deptno
    from emp
    where deptno = 30
    and ename like '%E%'
    and sal not between 1000 and 2000;

6. select *
    from emp
    where comm is null
    and mgr is not null
    and job in('MANAGER', 'CLERK')
    and ename not like '_L%';

오라클 함수의 종류
-내장 함수: 함수를 제작한 주체를 기준으로 오라클에서 기본으로 제공하는 함수
-사용자 정의 함수: 사용자가 필요해 의해 직접 정의한 함수

내장 함수의 종류
-단일행 함수(single-row function): 데이터가 한 행씩 입력되고 입력된 한 행당 결과가 하나씩 나오는 함수
-다중행 함수(multiple-row function): 여러 행이 입력되어 하나의 행으로 결과가 반환되는 함수

대,소문자를 바꿔주는 함수(p130 참고)
-UPPER(문자열): 괄호 안 문자 데이터를 모두 대문자로 변환하여 반환
-LOWER(문자열): 괄호 안 문자 데이터를 모두 소문자로 변환하여 반환
-INTCAP(문자열): 괄호 안 문자 데이터 중 첫 글자는 대문자로, 나머지 문자를 소문자로 변환 후 반환

문자열 길이를 구하는 함수(p132 참고)
-LENGTH

문자열 일부를 추출하는 함수(p134 참고)
-SUBSTR(문자열 데이터, 시작 위치, 추출 길이): 문자열 데이터의 시작 위치부터 추출 길이만큼 추출한다 시작 위치가
음수일 경우에는 마지막 위치부터 거슬러 올라간 위치에서 시작한다
-SUBSTR(문자열 데이터, 시작 위치): 문자열 데이터의 시작 위치부터 문자열 데이터 끝까지 추출한다 시작 위치가
음수일 경우에는 마지막 위치부터 거슬러 올라간 위치에서 끝까지 추출한다

문자열 데이터 안에서 특정 문자 위치를 찾는 함수(p137 참고)
-INSTR([대상문자열 데이터(필수)],
             [위치를 찾으려는 부분 문자(필수)],
             [위치 찾기를 시작할 대상 문자열 데이터 위치(선택, 기본값은 1)],
             [시작 위치에서 찾으려는 문자가 몇 번째인지 지정(선택, 기본값은 1)])

특정 문자를 다른 문자로 바꾸는 함수(p139 참고)
-REPLACE([문자열 데이터 또는 열이름(필수)], [찾는 문자(필수)], [대체할 문자(선택)])

데이터의 빈 공간을 특정 문자로 채우는 함수(p140 참고)
-LPAD([문자열 데이터 또는 열이름(필수)], [데이터의 자릿수(필수)], [빈 공간에 채울 문자(선택)])
-RPAD([문자열 데이터 또는 열이름(필수)], [데이터의 자릿수(필수)], [빈 공간에 채울 문자(선택)])

두 문자열 데이터를 합치는 함수(p141 참고)
-CONCAT

특정 문자를 지우는 함수(p142 참고)
-TRIM([삭제 옵션(선택)] [삭제할 문자(선택)] from [원본 문자열 데이터(필수)])
-LTRIM([원본 문자열 데이터(필수)], [삭제할 문자 집합(선택)]): 원본 문자열의 왼쪽에서 삭제할 문자열을 지정한다
-RTRIM([원본 문자열 데이터(필수)], [삭제할 문자 집합(선택)]): 원본 문자열의 오른쪽에서 삭제할 문자열을 지정한다

숫자데이터를 연산하고 수치를 조정하는 숫자 함수(p146 참고)
-ROUND([숫자(필수)], [반올림 위치(선택)]: 특정 위치에서 반올림하는 함수
-TRUNC([숫자(필수)], [버림 위치(선택)]: 특정 위치에서 버리는 함수
-CEIL([숫자(필수)]): 입력된 숫자와 가까운 큰정수를 반환하는 함수
-FLOOR([숫자(필수)]): 입력된 숫자와 가까운 작은정수를 반환하는 함수
-MOD([나눗셈 될 숫자(필수)], [나눌 숫자(필수)]): 숫자를 나눈 나머지 값을 구하는 함수

날짜 데이터를 다루는 날짜 함수(p150 참고)
-ADD_MONTHS([날짜 데이터(필수)], [더할 개월 수(정수)(필수)]): 특정 날짜 데이터에 입력한 개월 수만큼의 이후 날짜를 출력해 주는 함수
-MONTHS_BETWEEN([날짜 데이터1(필수)], [날짜 데이터2(필수)]): 두 날짜 데이터 간의 날짜 차이를 개월 수로 계산하여 출력해 주는 함수
-NEXT_DAY([날짜 데이터(필수)], [요일 문자(필수)]): 특정 날짜를 기준으로 돌아오는 요일의 날짜를 출력해 주는 함수
-LAST_DAY([날짜 데이터(필수)]): 특정 날짜가 속한 달의 마지막 날짜를 출력해 주는 함수

자료형을 변환하는 형 변환 함수(p157 참고)
-TO_CHAR([날짜 데이터(필수)], '[출력되길 원하는 문자 형태(필수)]'): 날짜 데이터를 원하는 형태의 문자열로 출력해 주는 함수
-TO_NUMBER([문자열 데이터(필수)], '[인식될 숫자형태(필수)]'): 문자열을 지정한 형태의 숫자로 인식하여 숫자 데이터로 변환해 주는 함수
-TO_DATE('[문자열 데이터(필수)]', '[인식될 날짜형태(필수)]'): 문자열 데이터를 날짜형의 데이터로 변환해 주는 함수

NULL 처리 함수(p167 참고)
-NVL([NULL인지 여부를 검사할 데이터 또는 열(필수)],
          [앞의 데이터가 NULL일 경우 반환할 데이터](필수)): 열 또는 데이터를 입력하여 해당 데이터가 NULL이 아닐 경우 데이터를 그대로 반환하고,
					    NULL인 경우 지정한 데이터를 반환해 주는 함수
-NVL2([NULL인지 여부를 검사할 데이터 또는 열(필수)],
            [앞의 데이터가 NULL이 아닐 경우 반환할 데이터 또는 계산식(필수)],
            [앞의 데이터가 NULL일 경우 반환할 데이터 또는 계산식(필수)]):열 또는 데이터를 입력하여 해당 데이터가 NULL이 아닐 때와 NULL일 때 
                                       				     출력 데이터를 각각 지정해 주는 함수
-----------------------------------------------------------------------------------------------------------------
8월8일
sum(sal) over (order by sal): 누적 합계
median(): 중앙값

oracle책 p174 문제
1. select empno, rpad(substr(empno,1,2),4,'#') MASKING_EMPNO, 
        ename, rpad(substr(ename,1,1),5,'*') MASKING_ENAME
    from emp
    where length(ename) >= 5
    and length(ename) < 6

2. select empno, ename, sal, trunc(sal/21.5,2) DAY_PAY, round(sal/21.5/8, 1) TIME_DAY
    from emp

3. select empno, ename, to_char(hiredate, 'YYYY/MM/DD'), 
        to_char(next_day(add_months(hiredate, 3),'월'), 'YYYY-MM-DD')R_JOB, nvl(to_char(comm), 'N/A') COMM
    from emp

4. select empno, ename, mgr, 
        case when mgr is null then '0000'
             when substr(mgr, 1, 2) = '75' then '5555'
             when substr(mgr, 1, 2) = '76' then '6666'
             when substr(mgr, 1, 2) = '77' then '7777'
             when substr(mgr, 1, 2) = '78' then '8888'
        else to_char(mgr)
        end chg_mgr
    from emp

oracle책 p212 문제
1. select deptno, trunc(avg(sal),0)avg_sal, max(sal)max_sal, min(sal)min_sal, count(*)cnt
    from emp
    group by deptno

2. select job, count(*)
    from emp
    group by job
    having count(*) >= 3

3. select to_char(hiredate,'YYYY')hire_year, deptno, count(*)cnt
    from emp
    group by to_char(hiredate,'YYYY'), deptno

4. select nvl2(comm,'O', 'X') as EXIST_COMM,
       count(*) as cnt
    from emp
    group by nvl2(comm,'O', 'X')

5. select deptno,
       to_char(hiredate, 'YYYY')HIRE_YEAR,
       count(*)cnt,
       max(sal)max_sal,
       sum(sal)sum_sal,
       avg(sal)avg_sal
    from emp
    group by rollup(deptno, to_char(hiredate, 'YYYY'))

합계를 구하는 함수(p178 참고)
-SUM([DISTINCT, ALL 중 하나를 선택하거나 아무값도 지정하지 않음(선택)]
          [합계를 구할 열이나 연산자, 함수를 사용한 데이터(필수)])

데이터 개수를 구해주는 함수(p180 참고)
-COUNT([DISTINCT, ALL 중 하나를 선택하거나 아무값도 지정하지 않음(선택)]
               [개수를 구할 열이나 연산자, 함수를 사용한 데이터(필수)])

최댓값을 구하는 함수(p182 참고)
-MAX([DISTINCT, ALL 중 하나를 선택하거나 아무값도 지정하지 않음(선택)]
           [최댓값을 구할 열이나 연산자, 함수를 사용한 데이터(필수)])

최솟값을 구하는 함수(p182 참고)
-MIN([DISTINCT, ALL 중 하나를 선택하거나 아무값도 지정하지 않음(선택)]
           [최솟값을 구할 열이나 연산자, 함수를 사용한 데이터(필수)])

평균값을 구하는 함수(p184 참고)
-AVG([DISTINCT, ALL 중 하나를 선택하거나 아무값도 지정하지 않음(선택)]
           [평균값을 구할 열이나 연산자, 함수를 사용한 데이터(필수)])

결과 값을 원하는 열로 묶어 출력하는 GROUP BY절(p186 참고)
SELECT      [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM        [조회할 테이블 이름]
WHERE      [조회할 행을 선별하는 조건식]
GROUP BY [그룹화할 열을 지정(여러 개 지정 가능)]
ORDER BY [정렬하는 열 지정]

GROUP BY절을 사용할 때 유의점(p188 참고)
-다중행 함수를 사용하지 않은 일반 열은 GROUP BY절에 명시하지 않으면 SELECT절에서 사용할 수 없다는 것

GROUP BY절에 조건을 줄 때 사용하는 HAVING절(p190 참고)
SELECT      [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM        [조회할 테이블 이름]
WHERE      [조회할 행을 선별하는 조건식]
GROUP BY [그룹화할 열을 지정(여러 개 지정 가능)]
HAVING     [출력 그룹을 제한하는 조건식]
ORDER BY [정렬하는 열 지정]

HAVING절을 사용할 때 유의점(p191 참고)
-조건식을 지정한다는 점에서 HAVING절이 WHERE절과 비슷하다고 생각할 수 있다
하지만 WHERE절은 출력 대상 행을 제한하고, HAVING절은 그룹화된 대상을 출력에서 제한하므로 쓰임새는 전혀 다르다는 것

그룹화와 관련된 여러 함수(p195 참고)
-ROLLUP
SELECT      [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM        [조회할 테이블 이름]
WHERE      [조회할 행을 선별하는 조건식]
GROUP BY ROLLUP [그룹화할 열을 지정(여러 개 지정 가능)]

-CUBE
SELECT      [조회할 열1 이름], [열2 이름], ..., [열N 이름]
FROM        [조회할 테이블 이름]
WHERE      [조회할 행을 선별하는 조건식]
GROUP BY CUBE [그룹화할 열을 지정(여러 개 지정 가능)]

-GROUPING SETS
-GROUPING_ID
-LISTAGG
-PIVOT
-UNPIVOT